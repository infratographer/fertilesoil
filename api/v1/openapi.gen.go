// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package v1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+yYUXOjNhDHv4pG7SMGJ/fGW5qkHc/cpZ20fbrmYQ1r0A1IOmk5J+Phu3cksAFDGnOX",
	"a3PXvGGs3f2v9qfV2jueqFIriZIsj3fcJjmW4B8vDQLhlTCYkDIPt/ixQkvuGyiKXzc8fr/jPxrc8Jj/",
	"EHVeotZFdGz5Dgl4Hfyz0Q1uD3a8vqsD3n08OfLQSbDj2iiNhgT6xBKfWHrhc9koUwLxmKdAuCBRIg84",
	"PWjkMbdkhMx4HfAUC5xpIlK3dvg64PeLTC3alweNqytnoMGg9AGUJqEkFDwmU2Ewx0ml03m51QE3+LES",
	"BlMev3eqg94G9R3eHWzV+gMmdFSen5GS/BnoGNYq7Vf/JH+jlDoXT2TwVjwL3tMJtB8FYWlngtG+BWPg",
	"8eyc/yfy6wuNj3V+QmOFkmNpxwH3C8fBAn5tjDJj34lKccCjkPTmvGNRSMIMjfNQorWQ4dMyvM9u/ZSa",
	"QRsYiSqRIIVmK4amjxTj3d6gDriEEqerqECLhROXoVzgPRlYEGQ+4lrI1C2Lu0Tq47S843EybpmQG9Xs",
	"piRIPKmNDL6SGwOkMgM6R8MuKsqVse7wmoLHPCfScRRlgvJqHSaqjMTAoGlwNjHC9x0e8z8MYgmSCcuA",
	"lSAhQ8M2yrDDWWJkEG3IA16IBKXFnpwLDUmO7DxcDiTYOIq2220I/utQmSxqbW30dnV5ffP79eI8XIY5",
	"lYXHXlCBnRgedIzyZbgMz9wipVGCFjzmb8IzH1AD5X67o97RiHYirf1x9I28eepnfOXfu3S7FEGmDIqC",
	"qQ0TZFmSiyI1KF3SDiRwpqv0YNyx5ns5lEhorO8jw1irK+eyt5WKtbJckXnsU+B7yJqW3DHSXAlNF5rV",
	"SOo758Zq5XbcWZ4vl3ue2osHtC5E4hOLPtimG3SRTuqGvol6XodJw2aDCWHKelVhezkNgRuoCno2RU0v",
	"mlBSSbzXjRbs1mRIYypukSojh1SswWLKlGTArJBZgWx1NUbiF6Qv4cH4wN8DD81YMFGGLt8XRIFWdgKD",
	"ZhJ2GEjcMlutF534THxCySh3GLgyuqdmkusqOqLjaLQ+DZApz46VZlpzOA6EiX8FHz9R/KTSh2er2CM/",
	"OyZKeIPbqZ0YpVePOD/7f3NeB+PLMdpfby7SE82wEJYckd5k0NDdjADtmegSn2qQ7p643If83AZ5uJNd",
	"4O/59nyRl+YkRk2HsjMoOupp8zH6rQ352RS1ml8hemEQRbtKkijqrwMT887nc/anM/sWYAtOEGVJ6VaZ",
	"kNlBHNC0tqrN/fUsfK2zYJSa1T3d+j7u4V9yEt5b7/cLt/zw79WMvR/9f/Vt1OK03wKD3X9szndb35/1",
	"//upeSj7dXSecUTr+u8AAAD//2DnR+QzGQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
